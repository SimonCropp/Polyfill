// <auto-generated />
#pragma warning disable

#if FeatureMemory
namespace Polyfills;

using System.Text;
using System;
using System.Diagnostics.CodeAnalysis;

static partial class Polyfill
{
#if !NET8_0_OR_GREATER

    static bool DoFormat<T>(this T target, Span<byte> destination, out int written, [StringSyntax(StringSyntaxAttribute.TimeSpanFormat)] ReadOnlySpan<char> format = default, IFormatProvider? formatProvider = null)
        where T : IFormattable
    {
        string result;

        if (format.Length == 0)
        {
            result = target.ToString(null, formatProvider);
        }
        else
        {
            result = target.ToString(format.ToString(), formatProvider);
        }

        if (result.Length == 0)
        {
            written = 0;
            return true;
        }

        return Encoding.UTF8.TryGetBytes(result.AsSpan(), destination, out written);
    }

#endif
}
#endif