// <auto-generated />
#pragma warning disable

namespace Polyfills;

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;

static partial class Polyfill
{
#if NET6_0 || NET7_0
    /// <summary>
    /// Deconstructs DateOnly by Year, Month, and Day.
    /// </summary>
    //Link: https://learn.microsoft.com/en-us/dotnet/api/system.dateonly.deconstruct?view=net-10.0
    [EditorBrowsable(EditorBrowsableState.Never)]
    public static void Deconstruct(this DateOnly target, out int year, out int month, out int day)
    {
        year = target.Year;
        month = target.Month;
        day = target.Day;
    }
#endif
#if FeatureMemory && (NET6_0 || NET7_0)

    /// <summary>
    /// Tries to format the value of the current instance into the provided span of characters.
    /// </summary>
    //Link: https://learn.microsoft.com/en-us/dotnet/api/system.dateonly.tryformat?view=net-10.0#system-dateonly-tryformat(system-span((system-byte))-system-int32@-system-readonlyspan((system-char))-system-iformatprovider)
    public static bool TryFormat(this DateOnly target, Span<byte> utf8Destination, out int bytesWritten, [StringSyntax(StringSyntaxAttribute.DateOnlyFormat)] ReadOnlySpan<char> format = default, IFormatProvider? provider = default) =>
        target.DoFormat(utf8Destination, out bytesWritten, format, provider);
#endif
}
