// <auto-generated />

#pragma warning disable

namespace Polyfills;

using System;
using System.Text;
using System.ComponentModel;
using System.Collections.Generic;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;

[ExcludeFromCodeCoverage]
[DebuggerNonUserCode]
#if PolyPublic
public
#endif
static partial class ConvertPolyfill
{
    /// <summary>
    /// Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with uppercase hex characters.
    /// Parameters specify the subset as an offset in the input array and the number of elements in the array to convert.
    /// </summary>
    //Link: https://learn.microsoft.com/en-us/dotnet/api/system.convert.tohexstring#system-convert-tohexstring(system-byte()-system-int32-system-int32)
    public static string ToHexString(byte[] inArray, int offset, int length)
#if NET5_0_OR_GREATER
        => Convert.ToHexString(inArray, offset, length);
#else
    {
        if (length < 0)
            throw new ArgumentOutOfRangeException(nameof(length));
        if (offset < 0)
            throw new ArgumentOutOfRangeException(nameof(offset));
        if (offset > (inArray.Length - length))
            throw new ArgumentOutOfRangeException(nameof(offset));

        var builder = new StringBuilder();

        var end = length + offset;
        for (int i = offset; i < end; i++)
        {
            var item = inArray[i];
            builder.Append(item.ToString("X2"));
        }

        return builder.ToString();
    }
#endif

}