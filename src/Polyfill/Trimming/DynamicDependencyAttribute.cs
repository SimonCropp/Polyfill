// <auto-generated />
#pragma warning disable

#if !NET

#nullable enable

namespace System.Diagnostics.CodeAnalysis;

using Targets = AttributeTargets;

/// <summary>
/// States a dependency that one member has on another.
/// </summary>
[ExcludeFromCodeCoverage]
[DebuggerNonUserCode]
[AttributeUsage(
    validOn: Targets.Constructor |
             Targets.Field |
             Targets.Method,
    AllowMultiple = true, Inherited = false)]
#if PolyPublic
public
#endif
sealed class DynamicDependencyAttribute :
    Attribute
{
    /// <summary>
    /// Initializes a new instance of the <see cref="DynamicDependencyAttribute"/> class
    /// with the specified signature of a member on the same type as the consumer.
    /// </summary>
    public DynamicDependencyAttribute(string memberSignature) =>
        MemberSignature = memberSignature;

    /// <summary>
    /// Initializes a new instance of the <see cref="DynamicDependencyAttribute"/> class
    /// with the specified signature of a member on a <see cref="Type"/>.
    /// </summary>
    public DynamicDependencyAttribute(string memberSignature, Type type)
    {
        MemberSignature = memberSignature;
        Type = type;
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="DynamicDependencyAttribute"/> class
    /// with the specified signature of a member on a type in an assembly.
    /// </summary>
    public DynamicDependencyAttribute(string memberSignature, string typeName, string assemblyName)
    {
        MemberSignature = memberSignature;
        TypeName = typeName;
        AssemblyName = assemblyName;
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="DynamicDependencyAttribute"/> class
    /// with the specified types of members on a <see cref="Type"/>.
    /// </summary>
    public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, Type type)
    {
        MemberTypes = memberTypes;
        Type = type;
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="DynamicDependencyAttribute"/> class
    /// with the specified types of members on a type in an assembly.
    /// </summary>
    public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, string typeName, string assemblyName)
    {
        MemberTypes = memberTypes;
        TypeName = typeName;
        AssemblyName = assemblyName;
    }

    /// <summary>
    /// Gets the signature of the member depended on.
    /// </summary>
    public string? MemberSignature { get; }

    /// <summary>
    /// Gets the <see cref="DynamicallyAccessedMemberTypes"/> which specifies the type
    /// of members depended on.
    /// </summary>
    public DynamicallyAccessedMemberTypes MemberTypes { get; }

    /// <summary>
    /// Gets the <see cref="Type"/> containing the specified member.
    /// </summary>
    public Type? Type { get; }

    /// <summary>
    /// Gets the full name of the type containing the specified member.
    /// </summary>
    public string? TypeName { get; }

    /// <summary>
    /// Gets the assembly name of the specified type.
    /// </summary>
    public string? AssemblyName { get; }

    /// <summary>
    /// Gets or sets the condition in which the dependency is applicable, e.g. "DEBUG".
    /// </summary>
    public string? Condition { get; set; }
}
#else
using System.Runtime.CompilerServices;
[assembly: TypeForwardedTo(typeof(System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute))]
#endif