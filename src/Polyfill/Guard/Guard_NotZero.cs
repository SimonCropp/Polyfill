// <auto-generated />

#pragma warning disable

namespace Polyfills;

using System.Numerics;
using System.Runtime.CompilerServices;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;

#if PolyPublic
public
#endif

static partial class Guard
{
    [DoesNotReturn]
    static void ThrowZero<T>(T value, string? paramName) =>
        throw new ArgumentOutOfRangeException(paramName, value, string.Format("{0} ('{1}') must be a non-zero value.", paramName, value));

    /// <summary>Throws an <see cref="ArgumentOutOfRangeException"/> if <paramref name="value"/> is zero.</summary>
    /// <param name="value">The argument to validate as non-zero.</param>
    /// <param name="paramName">The name of the parameter with which <paramref name="value"/> corresponds.</param>
    public static T NotZero<T>(T value, [CallerArgumentExpression(nameof(value))] string? paramName = null)
        where T : INumberBase<T>
    {
        if (T.IsZero(value))
        {
            ThrowZero(value, paramName);
        }

        return value;
    }
}