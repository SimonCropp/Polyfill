// <auto-generated />
#pragma warning disable

#nullable enable

namespace Polyfills;

using System;
using System.Threading;

static partial class Polyfill
{
#if !NETCOREAPP2_0_OR_GREATER && !NETSTANDARD2_1

    /// <summary>
    /// Copies the contents of this instance into the specified destination array segment of the same type T.
    /// </summary>
    //Link: https://learn.microsoft.com/en-us/dotnet/api/system.arraysegment-1.copyto?view=net-9.0#system-arraysegment-1-copyto(-0())
    public static void CopyTo<T>(this ArraySegment<T> target, ArraySegment<T> destination)
    {
        if (target.Count > destination.Count)
        {
            throw new ArgumentException("DestinationTooShort", nameof(destination));
        }

        if (target.Array == null)
        {
            throw new InvalidOperationException("InvalidOperation_NullArray");
        }

        Array.Copy(target.Array!, target.Offset, destination.Array, destination.Offset, target.Count);
    }

    /// <summary>
    /// Copies the contents of this instance into the specified destination array of the same type T.
    /// </summary>
    //Link: https://learn.microsoft.com/en-us/dotnet/api/system.arraysegment-1.copyto?view=net-9.0#system-arraysegment-1-copyto(-0())
    public static void CopyTo<T>(this ArraySegment<T> target, T[] destination) =>
        CopyTo<T>(target, destination, 0);

    /// <summary>
    /// Copies the contents of this instance into the specified destination array of the same type T, starting at the specified destination index.
    /// </summary>
    //Link: https://learn.microsoft.com/en-us/dotnet/api/system.arraysegment-1.copyto?view=net-9.0#system-arraysegment-1-copyto(-0()-system-int32)
    public static void CopyTo<T>(this ArraySegment<T> target, T[] destination, int destinationIndex)
    {
        if (target.Array == null)
        {
            throw new InvalidOperationException("InvalidOperation_NullArray");
        }

        Array.Copy(target.Array, target.Offset, destination, destinationIndex, target.Count);
    }

#endif
}