// <auto-generated />
#pragma warning disable

#if !NET10_0_OR_GREATER

namespace Polyfills;

using System;
using System.Text;
using System.Collections.Concurrent;

//TODO: Add XML documentation and fix links
static partial class Polyfill
{
    //Link: https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/libraries.md#string-normalization-apis-to-work-with-span-of-characters
    public static int GetNormalizedLength(this ReadOnlySpan<char> target, NormalizationForm normalizationForm = NormalizationForm.FormC) =>
        target.ToString().Normalize(normalizationForm).Length;

    //Link: https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/libraries.md#string-normalization-apis-to-work-with-span-of-characters
    public static bool IsNormalized(this ReadOnlySpan<char> target, NormalizationForm normalizationForm = NormalizationForm.FormC) =>
        target.ToString().IsNormalized(normalizationForm);

    //Link: https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview1/libraries.md#string-normalization-apis-to-work-with-span-of-characters
    public static bool TryNormalize(this ReadOnlySpan<char> target, Span<char> destination, out int charsWritten, NormalizationForm normalizationForm = NormalizationForm.FormC)
    {
        var normalize = target.ToString().Normalize(normalizationForm).AsSpan();
        charsWritten = normalize.Length;
        return normalize.TryCopyTo(destination);
    }
}
#endif