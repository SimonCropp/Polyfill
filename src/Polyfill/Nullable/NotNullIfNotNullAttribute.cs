// <auto-generated />
#pragma warning disable

#if !NETCOREAPP3_0_OR_GREATER && !NETSTANDARD2_1_OR_GREATER

namespace System.Diagnostics.CodeAnalysis;

using Targets = AttributeTargets;

[ExcludeFromCodeCoverage]
[DebuggerNonUserCode]
[AttributeUsage(
    validOn: Targets.Parameter |
             Targets.Property |
             Targets.ReturnValue,
    AllowMultiple = true)]
#if PolyPublic
public
#endif
sealed class NotNullIfNotNullAttribute :
    Attribute
{
    /// <summary>
    ///   Gets the associated parameter name.
    ///   The output will be non-<see langword="null"/> if the argument to the
    ///   parameter specified is non-<see langword="null"/>.
    /// </summary>
    public string ParameterName { get; }

    /// <summary>
    ///   Initializes the attribute with the associated parameter name.
    /// </summary>
    public NotNullIfNotNullAttribute(string parameterName) =>
        ParameterName = parameterName;
}
#else
using System.Runtime.CompilerServices;
[assembly: TypeForwardedTo(typeof(System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute))]
#endif
